services:
  client:
    image: snehas874/devzoku-client:latest
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_BASE_URL=${NEXT_PUBLIC_API_BASE_URL}
        - NEXT_PUBLIC_SOCKET_URI=${NEXT_PUBLIC_SOCKET_URI}
    container_name: devzoku-client
    restart: unless-stopped
    ports:
      - "3000:3000"
    networks:
      - devzoku
    depends_on:
      - server

  server:
    image: snehas874/devzoku-server:latest
    build:
      context: ./server
      dockerfile: Dockerfile
    restart: unless-stopped
    container_name: devzoku-server
    env_file: .env.server
    ports:
      - "8000:8000"
    networks:
      - devzoku
    depends_on:
      - postgres
      - valkey
      - qdrant

  migrator:
    image: snehas874/devzoku-migrator:latest
    container_name: devzoku-migrator
    build:
      context: ./server
      dockerfile: Dockerfile.migrator
    environment:
      - DATABASE_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    depends_on:
      - postgres
    networks:
      - devzoku
    restart: "no"

  worker:
    image: snehas874/devzoku-worker:latest
    build:
      context: ./worker
      dockerfile: Dockerfile
    container_name: devzoku-worker
    restart: unless-stopped
    command: bun start
    env_file: .env.worker
    networks:
      - devzoku
    depends_on:
      - server

  postgres:
    image: postgres:17.5-alpine3.22
    container_name: devzoku-db
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - devzoku

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
    networks:
      - devzoku
    depends_on:
      - postgres

  valkey:
    image: valkey/valkey:8.1.3-alpine3.22
    container_name: devzoku-valkey
    ports:
      - 6379:6379
    restart: always
    volumes:
      - valkey_data:/data
    networks:
      - devzoku

  qdrant:
    image: qdrant/qdrant
    container_name: devzoku-qdrant
    ports:
      - 6333:6333
    restart: always
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - devzoku

networks:
  devzoku:
    driver: bridge

volumes:
  postgres_data:
  valkey_data:
  qdrant_data:
